{
  "name": "markov",
  "description": "Silly markov chatbot module",
  "version": "0.0.7",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/node-markov.git"
  },
  "main": "./index.js",
  "directories": {
    "lib": ".",
    "example": "./example"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "dependencies": {
    "deck": ">=0.0.3",
    "lazy": ">=1.0.3",
    "hashish": ">=0.0.2"
  },
  "devDependencies": {
    "tape": "~1.1.1"
  },
  "license": "MIT",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "readme": "markov\n======\n\nGenerate markov chains for chatbots and freestyle rap contests.\n\nexamples\n========\n\nqwantz\n------\n\nqwantz.js:\n\n    var util = require('util');\n    var fs = require('fs');\n    \n    var markov = require('markov');\n    var m = markov(1);\n    \n    var s = fs.createReadStream(__dirname + '/qwantz.txt');\n    m.seed(s, function () {\n        var stdin = process.openStdin();\n        util.print('> ');\n        \n        stdin.on('data', function (line) {\n            var res = m.respond(line.toString()).join(' ');\n            console.log(res);\n            util.print('> ');\n        });\n    });\n\noutput:\n\n    $ node example/qwantz.js \n    > Hello friend.\n    Oh, that hurts me. How could fall apart, not unlike this tiny house. remains a danger when you? As I see him (quite often, Yes, As Thank I you? take have on! forgotten male, That oppression is is a A friend\n    > That is troubling news!\n    I've I had must to guard do against with such the a irony part of of their their fundamental fundamental injustices.\n    > Justice eh? SOMEBODY LIGHT UP THE BATSIGNAL\n    crazy I Utahraptor feel slipped alot in better! your about problems the put future! behind full You? of go My down perspective. The\n\nmethods\n=======\n\nmarkov(order)\n-------------\n\nCreate a new markov object of order `order`, which defaults to 2.\n\n.seed(s, cb)\n------------\n\nSeed the markov object with a string or stream `s`.\n\nIf `s` is a string, transition probabilities will be updated for every grouping\nof the previously specified order with dangling links at the front and end in\nthe appropriate direction.\n\nIf `s`s is a stream, data events will be line-buffered and fed into `.seed()` again\nline-by-line.\n\nIf `cb` is specified it will fire once the seed text is fully ingested.\n\n.search(text)\n-------------\n\nSearch for and return some key found in the text body `text`.\n\nReturn `undefined` if no matches were found.\n\n.pick()\n-------\n\nChoose a key at random.\n\n.next(key)\n----------\n\nFind a key likely to follow after `key`.\n\nReturns a hash with keys `key`, the canonical next key and `word`, a raw form of\n`key` as it appeared in the seed text.\n\n.prev(key)\n----------\n\nFind a key likely to come before `key`.\n\nReturns a hash with keys `key`, the canonical next key and `word`, a raw form of\n`key` as it appeared in the seed text.\n\n.forward(key, limit)\n--------------------\n\nGenerate a markov chain forward starting at `key` and returning an array of the\nraw word forms along the way.\n\nStop when the traversal hits a terminal entry or when limit words have been\ngenerated if limit is specified.\n\n.backward(key, limit)\n---------------------\n\nGenerate a markov chain backward starting at `key` and returning an array of the\nraw word forms along the way.\n\nStop when the traversal hits a terminal entry or when limit words have been\ngenerated if limit is specified.\n\n.fill(key, limit)\n-----------------\n\nGenerate a markov chain in both directions starting at `key`. Return an array of\nthe raw word forms along the way including the raw word form of the supplied\n`key`.\n\nStop when the traversal hits a terminal entry or when limit words have been\ngenerated if limit is specified.\n\n.respond(text, limit)\n---------------------\n\nSearch for a starting key in `text` and then call `.fill(key, limit)` on it.\n",
  "readmeFilename": "README.markdown",
  "bugs": {
    "url": "https://github.com/substack/node-markov/issues"
  },
  "_id": "markov@0.0.7",
  "dist": {
    "shasum": "35ace82ae26133f719e1608d21f0cbc21452abe3",
    "tarball": "http://registry.npmjs.org/markov/-/markov-0.0.7.tgz"
  },
  "_from": "markov@*",
  "_npmVersion": "1.3.7",
  "_npmUser": {
    "name": "substack",
    "email": "mail@substack.net"
  },
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "_shasum": "35ace82ae26133f719e1608d21f0cbc21452abe3",
  "_resolved": "https://registry.npmjs.org/markov/-/markov-0.0.7.tgz"
}
